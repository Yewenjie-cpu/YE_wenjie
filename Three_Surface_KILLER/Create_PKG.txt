=====================================================================================================================

首先，得创建工作空间->目的：环境隔离，依赖管理

流程：mkdir-p 工作空间名_ws(此处的_ws只是便于辨识是工作空间，可以不这么做)/src 
说明：-p是为了在递归创建文件（就是一次性创建每一级文件），创建src是因为ros2约定的，colcon只会检测/src下面的文件

=====================================================================================================================

然后，创建功能包->此处有三部分构成1.cmakelist.txt 2.package.xml 3.src PS:知道大概作用即可

流程：ros2 pkg create 包名 --build-type ament_cmake --dependencies 依赖包
说明：ament_cmake是功能包的类型，依赖包依据你需要的功能添加在xml中。注意是在工作空间底下创建

=====================================================================================================================

补充：
一.xml添加依赖，协议
1.<depend>rclcpp</depend>  //构建时和运行时需要的依赖
2.<exec_depend>python3-numpy</exec_depend>   //运行时依赖（运行时：二进制的库，与编译后的文件联动）
3.<build_depend>message_generation</build_depend>   //构建时依赖（声明第三方库的位置）
4.<buildtool_depend>ament_cmake</buildtool_depend>   //构建工具依赖（colcon的工具，就是colcon的操作方式）
5.<license>MIT</license>    //协议是必须的，这个是开源协议（仅是名称但现实中对应有明文）
PS:依赖声明后，才会添加包到环境中，否则后续的操作无效。
二.cmakelist配置（与xml息息相关）
......

=====================================================================================================================

接着，可以colcon build喽！！
流程：colcon会读取xml声明的依赖配置环境->cmake会在该环境下依据cmakelist编译

=====================================================================================================================

补充：
一.它会直接创建一些目录（只提重要的）
1.install/lib用于存放可执行文件
2.include存放各类头文件
3.src存放实现文件（建议分类：算法实现，工具实现，ros2节点）

=====================================================================================================================

最后，编写你的源文件，头文件//这里就可以体现工作空间的作用

=====================================================================================================================

最最后就是
source install/setup.bash 后   ros2 run 包名 可执行文件名（调试，得到你期望的结果）

=====================================================================================================================

补充：
工作空间_ws/
├── src/                    # 你的源代码（手动创建）
│   └── 你的功能包/
│       ├── CMakeLists.txt
│       ├── package.xml
│       ├── include/        # 头文件（推荐手动创建）
│       ├── src/           # 源文件（推荐手动创建）
│       ├── launch/        # launch文件（推荐手动创建）
│       └── config/        # 配置文件（推荐手动创建）
├── build/                 # 构建中间文件（colcon自动创建）
├── install/               # 安装目录（colcon自动创建）
└── log/                   # 构建日志（colcon自动创建）






